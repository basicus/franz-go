// ConsumerGroupHeartbeatTopicPartition is a common struct that is used
// in the ConsumerGroupHeartbeat request and response.
ConsumerGroupHeartbeatTopicPartition => not top level, no encoding, flexible v0+
  // Topic topic ID.
  TopicID: uuid
  // The partitions.
  Partitions: [int32]

// ConsumerGroupHeartbeatRequest is the KIP-848 request. This is unstable.
// Most fields in the request are null if they are unchanged since the last
// heartbeat request.
ConsumerGroupHeartbeatRequest => key 68, max version 0, flexible v0+
  // The group identifier.
  Group: string
  // The member ID generated by the coordinator. The member ID must be kept
  // during the entire lifetime of the member.
  MemberID: string
  // The current member epoch; 0 to join the group, -1 to leave the group, -2
  // to indicate that the static member will rejoin.
  MemberEpoch: int32
  // InstanceID is an optional user configured ID that is used for making a
  // group member "static", allowing many rebalances to be avoided.
  InstanceID: nullable-string
  // The rack ID of the consumer; heartbeat-unchanged null.
  Rack: nullable-string
  // How long the coordinator will wait on the member to revoke the consumer's
  // partitions; heartbeat-unchanged -1.
  RebalanceTimeoutMillis: int32(-1)
  // The subscribed topic names; heartbeat-unchanged null.
  SubscribedTopics: nullable[string]
  // Subscribed topic regex; heartbeat-unchanged null.
  SubscribedRegex: nullable-string
  // The server side assignor; heartbeat-unchanged null.
  ServerAssignor: nullable-string
  // The list of client-side assignors; heartbeat-unchanged null.
  ClientAssignors: nullable[=>]
    // The name of the assignor.
    Name: string
    // The minimum supported version for the metadata.
    MinVersion: int16
    // The maximum supported version for the metadata.
    MaxVersion: int16
    // The reason of the metadata update.
    Reason: int8
    // The version of the metadata.
    MetadataVersion: int16
    // The metadata.
    MetadataBytes: bytes
  // The partitions owned by the member; heartbeat-unchanged null.
  TopicPartitions: nullable[ConsumerGroupHeartbeatTopicPartition]

// ConsumerGroupHeartbeatResponse is a response to a ConsumerGroupHeartbeatRequest.
ConsumerGroupHeartbeatResponse =>
  ThrottleMillis
  // An error code, if any.
  //
  // Supported errors:
  // - GROUP_AUTHORIZATION_FAILED (version 0+)
  // - NOT_COORDINATOR (version 0+)
  // - COORDINATOR_NOT_AVAILABLE (version 0+)
  // - COORDINATOR_LOAD_IN_PROGRESS (version 0+)
  // - INVALID_REQUEST (version 0+)
  // - UNKNOWN_MEMBER_ID (version 0+)
  // - FENCED_MEMBER_EPOCH (version 0+)
  // - UNSUPPORTED_ASSIGNOR (version 0+)
  // - UNRELEASED_INSTANCE_ID (version 0+)
  // - GROUP_MAX_SIZE_REACHED (version 0+)
  ErrorCode: int16
  // ErrorMessage is a message for this error.
  ErrorMessage: nullable-string
  // The member ID generated by the coordinator, this is only provided when the
  // member joins with MemberEpoch == 0.
  MemberID: nullable-string
  // The member epoch.
  MemberEpoch: int32
  // True if the member should compute the assignment for the group.
  ShouldComputeAssignment: bool
  // The heartbeat interval in milliseconds.
  HeartbeatIntervalMillis: int32
  // The assignment, if provided.
  Assignment: nullable[=>]
    // The assigned error.
    Error: int8
    // The partitions assigned to the member that can be used immediately.
    AssignedTopicPartitions: [ConsumerGroupHeartbeatTopicPartition]
    // The partitions assigned to the member that need to be released from
    // their owners before they can be used.
    PendingTopicPartitions: [ConsumerGroupHeartbeatTopicPartition]
    // The version of the metadata.
    MetadataVersion: int16
    // The assigned metadata.
    MetadataBytes: bytes
